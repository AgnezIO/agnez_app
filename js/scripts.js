// Generated by CoffeeScript 1.10.0
(function() {
  var addValue, app, cell_count, cellstr, socket, values,
    modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

  socket = io();

  app = feathers().configure(feathers.socketio(socket));

  values = app.service('values');

  cell_count = 0;

  String.prototype.format = function() {
    var args;
    args = arguments;
    return this.replace(/{(\d+)}/g, function(match, number) {
      if (typeof args[number] !== 'undefined') {
        return args[number];
      } else {
        return match;
      }
    });
  };

  cellstr = "<div class=\"col-sm-6\">\n  <div class=\"chart-wrapper\">\n    <div class=\"chart-title\" id=title{1}>\n      {0} \n    </div>\n    <div class=\"chart-stage\" id=\"grid{1}\">\n      {2} \n    </div>\n    <div class=\"chart-notes\" id=\"description{1}\">\n      {3} \n    </div>\n  </div>\n</div>";

  values.on('patched', function(val) {
    var $description, $grid, $title;
    console.log('patching', val.name);
    $grid = $("#grid" + val.pos);
    $title = $("#title" + val.pos);
    $description = $("#description" + val.pos);
    $title.html(val.name);
    $description.html(val.description);
    if (val.type === "html") {
      $grid.html(val.value);
    }
    if (val.type === "img") {
      $grid.html("<img src='" + val.value + "'>");
    }
    return $grid.height("400px");
  });

  values.on('created', function(val) {
    console.log('creating', val.name);
    return addValue(val);
  });

  addValue = function(val) {
    var $dash, $row, img_scr, thisstr;
    $dash = $("#dashboard");
    if (modulo(cell_count, 2) === 0) {
      $dash.append('<div class="row"></div>');
    }
    $row = $(".row");
    console.log("Adding value " + val.id);
    console.log("value type " + val.type);
    if (val.type === "img") {
      img_scr = "<img src='" + val.value + "'>";
      thisstr = cellstr.format(val.name, val.pos, img_scr, val.description);
      $row.append(thisstr);
      cell_count += 1;
    }
    if (val.type === "html") {
      thisstr = cellstr.format(val.name, val.pos, val.value, val.description);
      $row.append(thisstr);
      return cell_count += 1;
    }
  };

  values.find(function(error, values) {
    return values.forEach(addValue);
  });

}).call(this);
