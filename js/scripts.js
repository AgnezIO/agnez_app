// Generated by CoffeeScript 1.10.0
(function() {
  var addValue, app, cc, columns, cost_line_chart, cost_line_counter, cost_line_div, grid_count, socket, values;

  socket = io();

  app = feathers().configure(feathers.socketio(socket));

  values = app.service('values');

  cost_line_chart = null;

  columns = [];

  cc = 0;

  cost_line_div = null;

  cost_line_counter = 1;

  grid_count = 0;

  values.on('updated', function(val) {
    var $grid;
    console.log('updating', val.name);
    $grid = $("#grid" + val.pos);
    if (val.type === "html") {
      $grid.html(val.value);
    }
    if (val.type === "img") {
      return $grid.html("<img src='" + val.value + "'>");
    }
  });

  values.on('patched', function(val) {
    var $grid;
    console.log('patching', val.name);
    $grid = $("#grid" + val.pos);
    if (val.type === "html") {
      $grid.html(val.value);
    }
    if (val.type === "img") {
      return $grid.html("<img src='" + val.value + "'>");
    }
  });

  values.on('created', function(val) {
    console.log('creating', val.name);
    return addValue(val);
  });

  addValue = function(val) {
    var $grid, gauge, id, opts, target;
    id = val.id;
    $grid = $("#grid" + val.pos);
    console.log("Adding value " + id);
    console.log("value type " + val.type);
    if (val.type === "cost_line") {
      cost_line_counter++;
      columns[cc++] = ["" + val.name].concat(val.value);
      if (!cost_line_div) {
        cost_line_div = "#grid" + id;
        grid_count += 1;
      }
    }
    if (val.type === "img") {
      $grid.html("<img src='" + val.value + "'>");
      grid_count += 1;
    }
    if (val.type === "script") {
      $grid.html("<script src='" + val.value + "'></script>");
      grid_count += 1;
    }
    if (val.type === "html") {
      $grid.html(val.value);
      grid_count += 1;
    }
    if (val.name === "gpu_use") {
      console.log("!!!!!!got here!");
      opts = {
        lines: 12,
        angle: 15,
        lineWidth: 0.44,
        pointer: {
          length: 0.9,
          strokeWidth: 0.035,
          color: '#000000'
        },
        limitMax: 'true',
        colorStart: '#6FADCF',
        colorStop: '#8FC0DA',
        strokeColor: '#E0E0E0',
        generateGradient: true
      };
      target = document.getElementById("grid" + id);
      console.log("grid" + id);
      gauge = new Gauge(target);
      gauge.maxValue = 100;
      gauge.animationSpeed = 32;
      return gauge.set(val.value);
    }
  };

  values.find(function(error, values) {
    values.forEach(addValue);
    console.log('columns', columns);
    console.log('cost_line_div', cost_line_div);
    cost_line_chart = c3.generate({
      bindto: cost_line_div,
      data: {
        columns: columns
      }
    });
    return console.log(columns);
  });

}).call(this);
